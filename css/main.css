/*
 * ===================================================================
 *                            main.css
 *          本项目的全局样式表，定义了网站的核心布局、
 *          PPT翻页系统、全局变量、通用工具类和响应式设计。
 * ===================================================================
 */


/*
 * ===================================================================
 *                            1. 字体定义
 * ===================================================================
*/
@font-face {
    font-family: 'ChillDINGothicVF';
    src: url('../Resourses/ChillDINGothicVF.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
}


/*
 * ===================================================================
 *                            2. 全局变量 (:root)
 * ===================================================================
*/
:root {
    /* --- 核心颜色板 --- */
    --bg-color: #FFFBF0; /* 全局米黄色背景 */
    --text-color: #333;  /* 默认文字颜色 */
    --primary-red: #E74C3C;
    --dark-blue: #2C3E50;
    --light-gray: #EAEAEA;

    /* --- 渐变色 --- */
    --gradient-primary: linear-gradient(135deg, #E74C3C 0%, #C0392B 100%);
    --gradient-secondary: linear-gradient(135deg, #2C3E50 0%, #34495E 100%);
    

}


/*
 * ===================================================================
 *                      3. 核心页面结构与重置
 * ===================================================================
*/
html, body, main {
    margin: 0;
    /* 关键：禁用浏览器默认的滚动条，将滚动控制权完全交给 JavaScript。*/
    overflow: hidden; 
    font-family: "Helvetica Neue", Arial, "PingFang SC", "Hiragino Sans GB", "Microsoft YaHei", sans-serif;
    /* background-color: var(--bg-color);  <-- 注释掉全局背景色 */
    color: var(--text-color);
    
    /* --- 响应式基础 --- */
    min-width: 320px;
    max-width: 100vw;
    width: 100%;
    box-sizing: border-box;
}


/*
 * ===================================================================
 *                      4. PPT翻页系统核心样式
 *      这是实现页面切换效果的基石，基于 transform 和 opacity。
 * ===================================================================
*/

/* (1) 所有页面的通用容器默认样式 */
.page-section {
    height: 100vh; /* 强制每一页都占满视口高度 */
    width: 100vw;  /* 强制每一页都占满视口宽度 */
    position: absolute; /* 让所有页面在同一个位置堆叠起来 */
    top: 0;
    left: 0;
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    
    /* ↓↓↓ 新增规则：将背景色设置在这里 ↓↓↓ */
    background-color: var(--bg-color); /* 为所有页面提供一个可被覆盖的默认背景色 */

    /* --- 默认状态：不可见且在屏幕下方 --- */
    opacity: 0;
    z-index: 0; /* 默认层级在最底部 */
    transform: translateY(100%); /* 默认将页面下移一个屏幕的高度 */

    /* --- 动画设置 --- */
    /* 定义切换页面时的过渡动画：transform变换用时1秒，opacity渐变用时1.2秒 */
    transition: transform 1s cubic-bezier(0.7, 0, 0.3, 1), 
                opacity 1.2s cubic-bezier(0.4, 0, 0.2, 1);
    /* 性能优化：提前通知浏览器 opacity 和 transform 属性将会改变，以便进行优化 */
    will-change: opacity, transform;
    
    /* 关键：页面容器自身不产生滚动条 */
    overflow: hidden; 
    /* 关键：非活动页面不响应鼠标点击、悬停等事件，防止"点穿" */
    pointer-events: none;
}

/* (2) 第一个页面特殊处理，让其默认可见 */
.page-section:first-child {
    transform: translateY(0);
    opacity: 1;
}

/* (3) 当前活动页面的样式 */
.page-section.is-active {
    transform: translateY(0); /* 移动到视口内 */
    opacity: 1; /* 完全可见 */
    z-index: 10; /* 提升层级到最顶层，确保能覆盖其他页面 */
    pointer-events: auto; /* 允许当前页面响应用户交互 */
}

/* (4) 已滚过的上一个页面的样式 */
.page-section.is-prev {
    transform: translateY(-100%); /* 移动到视口上方 */
    opacity: 0.3; /* 保留一点透明度，以备特殊过渡效果 */
    z-index: 5; /* 层级介于默认和活动页之间 */
}

/* (5) 页面内部滚动容器 (可选)
 * 如果某个页面内容过长需要内部滚动，可将内容包裹在此容器内。
 */
.page-content-wrapper {
    width: 100%;
    height: 100%;
    /* 关键：在页面内部创建滚动条，而不是让整个页面滚动 */
    overflow: auto;
}


/*
 * ===================================================================
 *                          5. 全局动画效果
 * ===================================================================
*/


/* --- Keyframe 定义 --- */
@keyframes smoothFadeIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes pop-in {
    from { transform: scale(0.5); opacity: 0; }
    to { transform: scale(1); opacity: 1; }
}
@keyframes fade-in-up {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
}
@keyframes slide-in-left {
    from { opacity: 0; transform: translateX(-50px); }
    to { opacity: 1; transform: translateX(0); }
}
@keyframes slide-in-right {
    from { opacity: 0; transform: translateX(50px); }
    to { opacity: 1; transform: translateX(0); }
}


/*
 * ===================================================================
 *                            6. UI组件
 * ===================================================================
*/

/* --- (1) 页面页码指示器 --- */
.page-indicator {
    position: fixed;
    top: 5vh;
    left: 5vw;
    color: #A0988A;
    font-size: 14px;
    z-index: 100; /* 确保在页面内容之上 */
    font-family: var(--font-sans);
}

/* --- (2) 页面跳转开发工具 --- */
#dev-jumper {
    position: fixed;
    top: 20px;
    right: 20px;
    z-index: 9999; /* 确保在所有内容的绝对顶层 */
    background-color: rgba(0, 0, 0, 0.7);
    padding: 10px;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
    display: flex;
    gap: 8px;
}

#jumper-input {
    width: 60px;
    padding: 8px;
    border: 1px solid #555;
    background-color: #333;
    color: #fff;
    border-radius: 4px;
    text-align: center;
    -moz-appearance: textfield; /* 隐藏 number 输入框的上下箭头 (Firefox) */
    appearance: textfield;
}
#jumper-input::-webkit-outer-spin-button,
#jumper-input::-webkit-inner-spin-button {
    -webkit-appearance: none; /* 隐藏 number 输入框的上下箭头 (Chrome, Safari) */
    margin: 0;
}

#jumper-btn {
    padding: 8px 12px;
    border: none;
    background-color: var(--primary-red, #E74C3C);
    color: white;
    font-weight: bold;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.2s ease;
}

#jumper-btn:hover {
    background-color: #C0392B;
}


/*
 * ===================================================================
 *                          7. 布局工具类
 * ===================================================================
*/

/* 
 * "请居中"工具类 
 * 为任何需要内容垂直和水平居中的页面提供便利。
 * 只需在 .page-section 元素上添加此类即可。
*/
.layout-centered {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 0 40px; /* 为居中内容提供左右边距 */
}

/* 
 * 限制居中布局的内容宽度，避免在超宽屏上内容过散。
*/
.layout-centered > * {
    max-width: 1100px;
    width: 100%;
}

/* 
 * 紧凑布局类 - 用于内容较少的页面，避免强制100vh导致的空白
*/
.compact-layout {
    height: auto !important;
    min-height: 100vh;
}




/*
 * ===================================================================
 *                      (历史遗留规则，已清理)
 * ===================================================================
*/

/* 新增：修复Page4布局的覆盖规则 - 已简化，避免冲突 */
/* 新增：修复Page7布局的覆盖规则 - 已删除，避免破坏PPT翻页系统 */